dependencies {
    compileOnly "com.github.Anuken.Arc:arc-core:$mindustryVersion"
    compileOnly "com.github.Anuken.MindustryJitpack:core:$mindustryVersion"

    implementation project(":core")

    compileOnly project(":annotations")
    annotationProcessor project(":annotations")
}

ext {
    sdkRoot = System.getenv("ANDROID_HOME") ?: System.getenv("ANDROID_SDK_ROOT") ?: rootProject.ext.localProperties.get("sdkroot")
}

tasks.named("jar").configure {
    archiveFileName = "raw-${rootProject.ext.getOutputJar(project)}"
    doLast{
        var useandroid = rootProject.ext.localProperties.get("useandroid")
        println "Use android ${useandroid == null || useandroid == true}."
        if (useandroid == null || useandroid == true) {
            var jar = tasks.jar.archiveFile.get().asFile
            var dex = new File(jar.parent, rootProject.ext.getOutputJar(project))

            var classpath = (configurations.compileClasspath.asList()
                    + configurations.runtimeClasspath.asList()
                    + [new File("$sdkRoot/platforms/android-30.0.1/android.jar")])

            var dependencies = ""

            exec{
                workingDir dex.parent

                for(def path : classpath){
                    dependencies += "--classpath "
                    dependencies += path.path + " "
                }

                println dex.absolutePath
                println jar.absolutePath
                "d8 $dependencies --min-api 14 --output ${dex} ${jar}"
                        .execute(null, file("")).waitForProcessOutput(System.out, System.err)
            }
        }
    }
}